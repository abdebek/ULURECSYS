
# Generated by https://quicktype.io

from typing import Dict, List


class Author:
  name: str
  id: str
  org: str

  def __init__(self, name: str, id: str, org: str) -> None:
    self.name = name
    self.id = id
    self.org = org


class Fo:
  name: str
  w: float

  def __init__(self, name: str, w: float) -> None:
    self.name = name
    self.w = w


class IndexedAbstract:
  index_length: int
  inverted_index: Dict[str, List[int]]

  def __init__(self, index_length: int, inverted_index: Dict[str, List[int]]) -> None:
    self.index_length = index_length
    self.inverted_index = inverted_index


class Venue:
  raw: str
  id: str

  def __init__(self, raw: str, id: str) -> None:
    self.raw = raw
    self.id = id


class Article:
  id: int
  title: str
  authors: List[Author]
  indexed_abstract: IndexedAbstract
  venue: Venue
  year: int
  references: List[str]
  n_citation: int
  doc_type: str
  publisher: str
  fos: List[Fo]
  abs: str

  def __init__(self, id: int, title: str, authors: List[Author], indexed_abstract: IndexedAbstract, venue: Venue, year: int, references: List[str], n_citation: int, doc_type: str, publisher: str, fos: List[Fo], abs: str) -> None:
    self.id = id
    self.title = title
    self.authors = authors
    self.indexed_abstract = indexed_abstract
    self.venue = venue
    self.year = year
    self.references = references
    self.n_citation = n_citation
    self.doc_type = doc_type
    self.publisher = publisher
    self.fos = fos
    self.abs = abs
